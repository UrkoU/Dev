{"mappings":"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","sources":["scripts/map.js","L.js"],"sourcesContent":["import L from \"leaflet\";\r\n\r\n// Así se pueden guardar los marcadores para cambiar el color\r\nlet aMarcadores = new L.layerGroup();\r\n\r\nlet mapa;\r\n\r\nconst iconoSeleccionado = L.icon({\r\n  iconUrl: \"../images/marker-selected.png\",\r\n  iconSize: [41, 41],\r\n});\r\n\r\nfunction CargarMapa() {\r\n  mapa = L.map(\"map\").setView([42.983333333333, -2.6166666666667], 8.4);\r\n  L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\r\n    attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\r\n  }).addTo(mapa);\r\n  if (aGuardados.length > 0) $(\"#map\").hide();\r\n}\r\n\r\nfunction CargarMarcadores() {\r\n  EliminarMarcadores();\r\n  aMarcadores = new L.LayerGroup();\r\n  aMarcadores.clearLayers();\r\n  // Cargar los marcadores de cada baliza\r\n  aBalizas.forEach((oBaliza) => {\r\n    let icono;\r\n    if (bBalizaExiste(oBaliza.codigo)) {\r\n      icono = iconoSeleccionado;\r\n    } else {\r\n      icono = iconoDefecto;\r\n    }\r\n    const marcador = L.marker([oBaliza.latitud, oBaliza.longitud], {\r\n      customId: `marcador${oBaliza.codigoBaliza}`,\r\n      icon: icono,\r\n    });\r\n    marcador.bindPopup(`${oBaliza.nombre}`);\r\n    marcador.on(\"click\", (marc) => {\r\n      AnadirAMapa(marc, oBaliza);\r\n    });\r\n    aMarcadores.addLayer(marcador);\r\n  });\r\n  mapa.addLayer(aMarcadores);\r\n}\r\n\r\nfunction EliminarMarcadores() {\r\n  mapa.removeLayer(aMarcadores);\r\n}\r\n\r\nfunction CambiarIconoMarcador(element, icono) {\r\n  element.target.setIcon(icono);\r\n}\r\n\r\nfunction AnadirAMapa(clickedElement, oBaliza) {\r\n  // Comprueba límite de guardados y que no esté ya seleccionado\r\n\r\n  if (aGuardados.length < iMaxGuardados && !bBalizaExiste(oBaliza.codigo)) {\r\n    CambiarIconoMarcador(clickedElement, iconoSeleccionado);\r\n\r\n    ObtenerTiempo(oBaliza.codigo);\r\n\r\n    aGuardados.push({\r\n      idUsuario: usuario.id,\r\n      codigoBaliza: oBaliza.codigo,\r\n      temperatura: true,\r\n      sensacionTermica: true,\r\n      humedad: true,\r\n      velocidadViento: false,\r\n      direccionViento: false,\r\n      horaAmanecer: false,\r\n      horaAtardecer: false,\r\n      presionAtmosferica: false,\r\n    });\r\n    console.log(\"AÑADIR A MAPA \" + aGuardados.length + \"/\" + iMaxGuardados);\r\n    GuardarMarcadores(aGuardados);\r\n  } else {\r\n    if (bBalizaExiste(oBaliza.codigo)) {\r\n      // Si el código ya está, elimina la baliza y lo guarda en el local storage\r\n      let s = aGuardados.findIndex((e) => e.codigoBaliza == oBaliza.codigo);\r\n      aGuardados.splice(s, 1);\r\n      DeleteOpcionUsuario(usuario.id, oBaliza.codigo);\r\n      // aGuardados.delete(oBaliza.codigo);\r\n      GuardarMarcadores(aGuardados);\r\n      $(`#div${oBaliza.codigo}`).remove();\r\n      CambiarIconoMarcador(clickedElement, iconoDefecto);\r\n    } else {\r\n      MostrarError(limitError);\r\n    }\r\n  }\r\n}\r\n\r\nfunction AnadirCarta(oTiempo) {\r\n  let oOpciones = ObtenerGuardadoPorId(oTiempo.codigo);\r\n  $(\"#divContainer\").append(\r\n    `<div id=\"div${oTiempo.codigo}\" class=\"infoTiempo mw-50 droppableItem\"><p class=\"cardTitle\" id=\"nombre${\r\n      oTiempo.codigo\r\n    }\">${oTiempo.nombre}</p><img id=\"img${\r\n      oTiempo.codigo\r\n    }\" class=\"cardImg\" src=\"images/${oTiempo.descripcion.toLowerCase()}-white.png\" ></div>`\r\n  );\r\n\r\n  $(`#div${oTiempo.codigo}`).on(\"click\", () => {\r\n    MostrarCartaGrande(oTiempo, oOpciones);\r\n  });\r\n\r\n  $(`#div${oTiempo.codigo}`).hover(function () {\r\n    $(this).css(\"cursor\", \"pointer\");\r\n  });\r\n\r\n  $(`#div${oTiempo.codigo}`).append(`<div id=\"info${oTiempo.codigo}\" ></div>`);\r\n  for (const key in oPropiedadesCortas) {\r\n    if (!key.includes(\"Nombre\"))\r\n      if (key == \"horaAtardecer\" || key == \"horaAmanecer\") {\r\n        let f = new Date(parseInt(oTiempo[key]) * 1000);\r\n\r\n        $(`#info${oTiempo.codigo}`).append(\r\n          `<div id=\"${key}${oTiempo.codigo}\">${oPropiedadesCortas[key + \"Nombre\"]}\r\n          <span id=\"value${key}${oTiempo.codigo}\">${f.customFormat(\"#hhhh#:#mm#\")}</span>\r\n          ${oPropiedadesCortas[key]}</div>`\r\n        );\r\n      } else\r\n        $(`#info${oTiempo.codigo}`).append(\r\n          `<div id=\"${key}${oTiempo.codigo}\">${oPropiedadesCortas[key + \"Nombre\"]}\r\n          <span id=\"value${key}${oTiempo.codigo}\">${oTiempo[key]}</span>\r\n           ${oPropiedadesCortas[key]}</div>`\r\n        );\r\n  }\r\n  for (const key in oOpciones) {\r\n    if (!oOpciones[key]) {\r\n      $(`#${key}${oOpciones.codigoBaliza}`).hide();\r\n    }\r\n  }\r\n\r\n  CrearDroppables();\r\n}\r\n\r\nfunction ActualizarCarta(oTiempo) {\r\n  for (const key in oPropiedadesCortas) {\r\n    if (!oPropiedadesCortas[key].includes(\"Nombre\")) {\r\n      $(`#value${oPropiedadesCortas[key]}${oTiempo.codigo}`).val(oTiempo[key]);\r\n    }\r\n  }\r\n}\r\n\r\nfunction bBalizaExiste(codigoBaliza) {\r\n  return aGuardados.some((e) => e.codigoBaliza === codigoBaliza);\r\n}\r\n\r\nwindow.CargarMapa = CargarMapa;\r\nwindow.CargarMarcadores = CargarMarcadores;\r\nwindow.AnadirCarta = AnadirCarta;\r\nwindow.ActualizarCarta = ActualizarCarta;\r\nwindow.aMarcadores = aMarcadores;\r\n","module.exports=L;"],"names":["$88ec7b2cc8c60a7c$var$mapa","$88ec7b2cc8c60a7c$var$aMarcadores","$parcel$interopDefault","$66ba7a37141049c3$exports","L","layerGroup","$88ec7b2cc8c60a7c$var$iconoSeleccionado","icon","iconUrl","iconSize","$88ec7b2cc8c60a7c$var$CambiarIconoMarcador","element","icono","target","setIcon","$88ec7b2cc8c60a7c$var$bBalizaExiste","codigoBaliza","aGuardados","some","e","window","CargarMapa","map","setView","tileLayer","attribution","addTo","length","$","hide","removeLayer","LayerGroup","clearLayers","aBalizas","forEach","oBaliza","codigo","iconoDefecto","marcador","marker","latitud","longitud","customId","bindPopup","nombre","on","marc","clickedElement","iMaxGuardados","ObtenerTiempo","push","idUsuario","usuario","id","temperatura","sensacionTermica","humedad","velocidadViento","direccionViento","horaAmanecer","horaAtardecer","presionAtmosferica","console","log","GuardarMarcadores","s","findIndex","splice","DeleteOpcionUsuario","remove","MostrarError","limitError","$88ec7b2cc8c60a7c$var$AnadirAMapa","addLayer","oTiempo","oOpciones","ObtenerGuardadoPorId","append","descripcion","toLowerCase","MostrarCartaGrande","hover","this","css","key","oPropiedadesCortas","includes","f","Date","parseInt","customFormat","key1","CrearDroppables"],"version":3,"file":"index.735cb299.js.map"}